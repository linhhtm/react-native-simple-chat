{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Tum lum\\\\react-native-simple-chat\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SocketIOClient from 'socket.io-client';\nimport { GiftedChat } from 'react-native-gifted-chat';\nvar USER_ID = '@userId';\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      messages: [],\n      userId: null\n    };\n    _this.determineUser = _this.determineUser.bind(_assertThisInitialized(_this));\n    _this.onReceivedMessage = _this.onReceivedMessage.bind(_assertThisInitialized(_this));\n    _this.onSend = _this.onSend.bind(_assertThisInitialized(_this));\n    _this._storeMessages = _this._storeMessages.bind(_assertThisInitialized(_this));\n    _this.socket = SocketIOClient('http://localhost:3000');\n\n    _this.socket.on('message', _this.onReceivedMessage);\n\n    _this.determineUser();\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"determineUser\",\n    value: function determineUser() {\n      var _this2 = this;\n\n      AsyncStorage.getItem(USER_ID).then(function (userId) {\n        if (!userId) {\n          _this2.socket.emit('userJoined', null);\n\n          _this2.socket.on('userJoined', function (userId) {\n            AsyncStorage.setItem(USER_ID, userId);\n\n            _this2.setState({\n              userId: userId\n            });\n          });\n        } else {\n          _this2.socket.emit('userJoined', userId);\n\n          _this2.setState({\n            userId: userId\n          });\n        }\n      }).catch(function (err) {\n        return alert(e);\n      });\n    }\n  }, {\n    key: \"onReceivedMessage\",\n    value: function onReceivedMessage(messages) {\n      this._storeMessages(messages);\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.socket.emit('message', messages[0]);\n\n      this._storeMessages(messages);\n    }\n  }, {\n    key: \"_storeMessages\",\n    value: function _storeMessages(messages) {\n      this.setState(function (prevState) {\n        return {\n          messages: GiftedChat.append(prevState.messages, messages)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = {\n        _id: this.state.userId || -1\n      };\n      return React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: this.onSend,\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nmodule.exports = Main;","map":{"version":3,"sources":["E:/Tum lum/react-native-simple-chat/App.js"],"names":["React","AsyncStorage","SocketIOClient","GiftedChat","USER_ID","Main","props","state","messages","userId","determineUser","bind","onReceivedMessage","onSend","_storeMessages","socket","on","getItem","then","emit","setItem","setState","catch","err","alert","e","prevState","append","user","_id","Component","module","exports"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;SACSC,Y;;;;AACT,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,IAAMC,OAAO,GAAG,SAAhB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB;AACA,UAAKE,MAAL,GAAc,MAAKA,MAAL,CAAYF,IAAZ,+BAAd;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,+BAAtB;AACA,UAAKI,MAAL,GAAcb,cAAc,CAAC,uBAAD,CAA5B;;AACA,UAAKa,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,MAAKJ,iBAA/B;;AACA,UAAKF,aAAL;;AAbiB;AAclB;;;;WAED,yBAAgB;AAAA;;AACdT,MAAAA,YAAY,CAACgB,OAAb,CAAqBb,OAArB,EAA8Bc,IAA9B,CAAmC,UAACT,MAAD,EAAY;AAC7C,YAAI,CAACA,MAAL,EAAa;AAEX,UAAA,MAAI,CAACM,MAAL,CAAYI,IAAZ,CAAiB,YAAjB,EAA+B,IAA/B;;AACA,UAAA,MAAI,CAACJ,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,UAACP,MAAD,EAAY;AACvCR,YAAAA,YAAY,CAACmB,OAAb,CAAqBhB,OAArB,EAA8BK,MAA9B;;AACA,YAAA,MAAI,CAACY,QAAL,CAAc;AAACZ,cAAAA,MAAM,EAANA;AAAD,aAAd;AACD,WAHD;AAID,SAPD,MAOO;AACL,UAAA,MAAI,CAACM,MAAL,CAAYI,IAAZ,CAAiB,YAAjB,EAA+BV,MAA/B;;AACA,UAAA,MAAI,CAACY,QAAL,CAAc;AAACZ,YAAAA,MAAM,EAANA;AAAD,WAAd;AACD;AACF,OAZD,EAYGa,KAZH,CAYS,UAACC,GAAD;AAAA,eAASC,KAAK,CAACC,CAAD,CAAd;AAAA,OAZT;AAaD;;;WAED,2BAAkBjB,QAAlB,EAA4B;AAC1B,WAAKM,cAAL,CAAoBN,QAApB;AACD;;;WAED,kBAAsB;AAAA,UAAfA,QAAe,uEAAJ,EAAI;AACpB,WAAKO,MAAL,CAAYI,IAAZ,CAAiB,SAAjB,EAA4BX,QAAQ,CAAC,CAAD,CAApC;;AACA,WAAKM,cAAL,CAAoBN,QAApB;AACD;;;WAED,wBAAeA,QAAf,EAAyB;AACvB,WAAKa,QAAL,CAAc,UAAAK,SAAS,EAAI;AACzB,eAAO;AACLlB,UAAAA,QAAQ,EAAEL,UAAU,CAACwB,MAAX,CAAkBD,SAAS,CAAClB,QAA5B,EAAsCA,QAAtC;AADL,SAAP;AAGD,OAJD;AAKD;;;WAED,kBAAS;AACP,UAAIoB,IAAI,GAAG;AACTC,QAAAA,GAAG,EAAE,KAAKtB,KAAL,CAAWE,MAAX,IAAqB,CAAC;AADlB,OAAX;AAGA,aACE,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QADvB;AAEE,QAAA,MAAM,EAAE,KAAKK,MAFf;AAGE,QAAA,IAAI,EAAEe,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EA7DgB5B,KAAK,CAAC8B,S;;AAkEzBC,MAAM,CAACC,OAAP,GAAiB3B,IAAjB","sourcesContent":["import React from 'react';\nimport { AsyncStorage, StyleSheet, Text, View } from 'react-native';\nimport SocketIOClient from 'socket.io-client';\nimport { GiftedChat } from 'react-native-gifted-chat';\n\nconst USER_ID = '@userId';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      userId: null,\n    }\n    \n    this.determineUser = this.determineUser.bind(this);\n    this.onReceivedMessage = this.onReceivedMessage.bind(this);\n    this.onSend = this.onSend.bind(this);\n    this._storeMessages = this._storeMessages.bind(this);\n    this.socket = SocketIOClient('http://localhost:3000');\n    this.socket.on('message', this.onReceivedMessage);\n    this.determineUser();\n  };\n\n  determineUser() {\n    AsyncStorage.getItem(USER_ID).then((userId) => {\n      if (!userId) {\n        \n        this.socket.emit('userJoined', null);\n        this.socket.on('userJoined', (userId) => {\n          AsyncStorage.setItem(USER_ID, userId);\n          this.setState({userId})\n        })\n      } else {\n        this.socket.emit('userJoined', userId);\n        this.setState({userId})\n      }\n    }).catch((err) => alert(e))\n  }\n\n  onReceivedMessage(messages) {\n    this._storeMessages(messages);\n  }\n\n  onSend(messages = []) {\n    this.socket.emit('message', messages[0]);\n    this._storeMessages(messages);\n  }\n\n  _storeMessages(messages) {\n    this.setState(prevState => {\n      return {\n        messages: GiftedChat.append(prevState.messages, messages)\n      }\n    })\n  }\n  \n  render() {\n    var user = {\n      _id: this.state.userId || -1\n    }\n    return (\n      <GiftedChat\n        messages={this.state.messages}\n        onSend={this.onSend}\n        user={user}\n      />\n    )\n  }\n\n}\n\n\nmodule.exports = Main"]},"metadata":{},"sourceType":"module"}